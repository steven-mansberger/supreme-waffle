# System Configuration Backup

This repository provides scripts to back up and restore system configurations on modern Linux distributions, such as Fedora, Ubuntu, and Debian. The backup is minimal and text-based, capturing critical system metadata like mounts, symlinks, packages, services, and cron jobs, without including user configuration files (e.g., `~/.config/`) or real-time resource usage (e.g., disk or CPU). It’s ideal for users who manage user configs separately (e.g., via Syncthing) and need a reliable way to document and restore system state.

Developed for a Fedora 41 server with Syncthing (`/home/steven/dev -> /syncthing/dev`) and cron jobs (e.g., for `/comics`), this solution is portable across Linux systems.

## Features

- **Text-Based Backup**: Generates a human-readable `.txt` file and a machine-readable `.yml` file in a timestamped directory (e.g., `backups/cheesecake/2025-04-18T17-45-00/`).
- **Cron Jobs**: Saves `crontab -l` output to `crontabs/<user>.crontab` files for exact restoration.
- **Command Outputs**: Captures configuration-related outputs (e.g., `mount`, `lsblk`, `blkid`, `cat /etc/fstab`) in a `commands/` directory for reference.
- **Ansible Restoration**: Uses `playbook.yml` to restore mounts, symlinks, packages, services, cron jobs, and dotfiles.
- **Git Integration**: Stores backups in a Git-friendly structure for version control.
- **No Resource Usage**: Excludes real-time data (e.g., disk usage, CPU info) to focus on configurations.

## Prerequisites

- **Linux System**: Tested on Fedora 41; compatible with Ubuntu, Debian, etc.
- **Tools**:
  - `bash`, `git`, `ansible` (for restoration).
  - Package managers: `dnf` or `apt`.
  - Optional: `sudo` for root-only commands (e.g., `parted -l`).
- **Permissions**: Write access to the backup directory (e.g., `backups/`).
- **Syncthing** (optional): For managing user configs like `/home/steven/dev/rss_generator/`.

## Setup

1. **Clone the Repository**:
   ```bash
   git clone <repository-url>
   cd <repository-directory>
   ```

2. **Ensure Executable Scripts**:
   ```bash
   chmod +x gather_config.sh setup.sh
   ```

3. **Install Ansible** (for restoration):
   ```bash
   ./setup.sh
   ```
   This installs `ansible` and dependencies (e.g., `python3`, `ansible-core` on Fedora).

## Usage

### Backup

Run `gather_config.sh` to create a timestamped backup:

```bash
./gather_config.sh
```

For root-only commands (e.g., `parted -l`, `fdisk -l`):

```bash
sudo ./gather_config.sh
```

**Output**: Creates `backups/<hostname>/<timestamp>/` (e.g., `backups/cheesecake/2025-04-18T17-45-00/`):
- `system_config_<hostname>_<os>.txt`: Human-readable summary.
- `system_config_<hostname>_<os>.yml`: Machine-readable metadata.
- `crontabs/<user>.crontab`: Per-user crontab files (e.g., `steven.crontab`).
- `commands/<command>.txt`: Command outputs (e.g., `mount.txt`, `blkid.txt`).

**Commit to Git**:
```bash
git add backups/
git commit -m "Backup for $(hostname) on $(date '+%Y-%m-%dT%H-%M-%S')"
git push
```

### Restore

Use `playbook.yml` to restore configurations:

```bash
ansible-playbook playbook.yml -e "config_file=backups/cheesecake/2025-04-18T17-45-00/system_config_cheesecake_fedora.yml"
```

Or copy the `.yml` and run:

```bash
cp backups/cheesecake/2025-04-18T17-45-00/system_config_cheesecake_fedora.yml system_config.yml
./setup.sh
```

**Restored Components**:
- Mount points (e.g., `LABEL=2TBSSD01`).
- Symlinks (e.g., `/home/steven/dev -> /syncthing/dev`).
- Packages (e.g., `firefox`, `calibre`).
- Services (e.g., `sshd.service`).
- Cron jobs (e.g., `9 * * * * /usr/bin/find "/comics" ...`).
- Dotfiles (e.g., `~/.bashrc`).

**Manual Steps**:
- Review `commands/fstab.txt`, `commands/hosts.txt`, etc., for manual restoration (e.g., `sudo vi /etc/fstab`).
- Restore user configs (e.g., `~/.config/VSCodium/`) via Syncthing.

## Backup Structure

Example: `backups/cheesecake/2025-04-18T17-45-00/`

```plaintext
├── system_config_cheesecake_fedora.txt
├── system_config_cheesecake_fedora.yml
├── crontabs/
│   ├── steven.crontab
│   ...
└── commands/
    ├── mount.txt
    ├── lsblk.txt
    ├── ip_a.txt
    ├── fstab.txt
    ├── blkid.txt
    ├── hosts.txt
    ├── enabled_services.txt
    ├── parted_l.txt  # If root
    ...
```

### `.yml` Sections

- `metadata`: Hostname, OS, timestamp.
- `mounts`: Filesystem mounts (e.g., `/mnt/2TBSSD01`).
- `symlinks`: User home symlinks (e.g., `/home/steven/dev`).
- `packages`: Installed packages (e.g., `firefox.x86_64`).
- `gui_apps`: GUI applications (e.g., `Firefox Web Browser`).
- `services`: Running services (e.g., `sshd.service`).
- `cron_jobs`: Crontab files (e.g., `crontabs/steven.crontab`).
- `firewall_rules`: Firewall configuration (manual).
- `dotfiles`: User dotfiles (e.g., `~/.bashrc`).
- `command_outputs`: Command output files (e.g., `commands/blkid.txt`).

Example `.yml` snippet:

```yaml
system_config:
  metadata:
    hostname: cheesecake
    os_name: fedora
    os_version: 41
    timestamp: 2025-04-18T17-45-00
  cron_jobs:
    - user: steven
      file: crontabs/steven.crontab
  command_outputs:
    - command: mount
      file: commands/mount.txt
    - command: blkid
      file: commands/blkid.txt
    ...
```

## Command Outputs

The `commands/` directory captures configuration-related outputs:

### General Commands
- `mount`: Active mount points.
- `lsblk`: Block devices and partitions.
- `ip a`: Network interfaces.
- `cat /etc/fstab`: Mount configurations.
- `uname -a`: Kernel and system info.
- `cat /etc/os-release`: OS details.
- `pvs`, `vgs`, `lvs`: LVM volumes.
- `blkid`: Disk UUIDs and labels.
- `cat /etc/hosts`: Hostname mappings.
- `cat /etc/resolv.conf`: DNS configuration.
- `systemctl list-unit-files --state=enabled`: Enabled services.
- `cat /etc/network/interfaces`: Network config (Debian/Ubuntu).
- `lsmod`: Loaded kernel modules.
- `zfs list`: ZFS datasets (if applicable).
- `btrfs subvolume list /`: BTRFS subvolumes (if applicable).
- `mdadm --detail --scan`: RAID details (if applicable).
- `cat /proc/mdstat`: Software RAID status.
- `getent passwd`: User accounts.
- `getent group`: Group memberships.

### Root-Only Commands
Run with `sudo`:
- `parted -l`: Partition tables.
- `fdisk -l`: Disk partitions.
- `dmidecode -t system`: Hardware info.
- `iptables -L -v -n`: IPTables rules.
- `nft list ruleset`: NFTables rules.

## Notes

- **Syncthing**: Manage user configurations (e.g., `/home/steven/dev/rss_generator/`) separately.
- **Root Access**: Use `sudo` for root-only commands to capture hardware/partition details.
- **Testing**: Test restoration in a VM to verify cron jobs (`crontab -l`), mounts (`findmnt`), and symlinks (`ls -l /home/steven/`).
- **Customization**: Add commands to the `COMMANDS` array in `gather_config.sh` (e.g., `cat /etc/ssh/sshd_config`).

## Contributing

Submit issues or pull requests for new commands, fixes, or compatibility improvements.

## License

MIT License. See `LICENSE` for details.